apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ containerId }}
    {{# labels }}
    {{ key }}: "{{ value }}"
    {{/ labels }}
    templateVersion: "1"
  name: {{ containerId }}
  namespace: {{ namespaceId }}
spec:
  strategy:
      type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: {{ containerId }}
  template:
    metadata:
      labels:
        app: {{ containerId }}
    spec:
      containers:
      - image: {{{ imagePath }}}
        imagePullPolicy: Always
        name: {{ containerId }}
        ports:
        {{# ports }}
        - containerPort: {{ . }}
        {{/ ports }}
        env:
          {{# envs }}
          - name: {{ key }}
            value: "{{ value }}"
          {{/ envs }}
        resources:
          requests:
            {{# resourceLimit.cpuM }}
            cpu: {{ resourceLimit.cpuM }}m
            {{/ resourceLimit.cpuM }}
            {{# resourceLimit.memoryGB }}
            memory: {{ resourceLimit.memoryGB }}Gi
            {{/ resourceLimit.memoryGB }}
          limits:
            {{# resourceLimit.gpuCnt }}
            nvidia.com/gpu: {{ resourceLimit.gpuCnt }}
            {{/ resourceLimit.gpuCnt }}
        {{# storageSpec }}
        volumeMounts:
          - name: {{ key }}
            mountPath: {{{ value.mountPath }}}
            {{# value.readOnly }}
            readOnly: {{ value.readOnly }}
            {{/ value.readOnly }}
            {{# value.subPath }}
            subPath: {{ value.subPath }}
            {{/ value.subPath }}
        {{/ storageSpec }}
      {{# storageSpec }}
      volumes:
        - name: {{ key }}
          persistentVolumeClaim: { claimName: {{ key }} }
      {{/ storageSpec }}
      nodeSelector:
      {{# nodeSelectors }}
        {{ key }}: "{{ value }}"
      {{/ nodeSelectors }}
      tolerations:
      {{# applyToleration }}
      {{# nodeSelectors }}
      - key: {{ key }}
        operator: Equal
        value: "{{ value }}"
        effect: NoExecute
      {{/ nodeSelectors }}
      {{/ applyToleration }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ containerId }}
  name: {{ containerId }}
  namespace: {{ namespaceId }}
spec:
  ports:
  {{# ports }}
  - name: http-tcp{{.}}
    port: {{.}}
    protocol: TCP
    targetPort: {{.}}
  {{/ ports }}
  selector:
    app: {{ containerId }}
  type: ClusterIP
{{# ports }}
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ containerId }}-{{ . }}
  namespace: {{ namespaceId }}
  labels:
    app: {{ containerId }}
spec:
  hosts:
  - {{ . }}-{{ containerId }}.{{ rootDomain }}
  gateways:
  - {{ gateway }}
  http:
  - name: "svc"
    route:
    - destination:
        host: {{ containerId }}
        port:
          number: {{ . }}
    corsPolicy:
      allowOrigins:
      - regex: .*
      allowMethods:
      - GET
      - POST
      - PUT
      - DELETE
      - PATCH
      - OPTIONS
      allowHeaders:
      - Content-Type
      - x-access-toke
      - authorization
      - Accept
      - Origin
{{/ ports }}
